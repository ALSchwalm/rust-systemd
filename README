Only has bindings for the journal APIs at the moment. Journal sending is
supported, and systemd::journal::Journal is a (low functionality) wrapper
around the read API.

HOWTO log to journald:

    # cat >Cargo.toml <<EOF
    [dependencies.systemd]
    git = "https://github.com/jmesmon/rust-systemd"
    EOF

    # editor src/main.rs


    #![feature(phase)]
    #[phase(plugin,link)] extern crate log;
    #[phase(plugin,link)] extern crate systemd;
    use systemd::journal;

    fn main() {
       use systemd::journal;
       use log::set_logger;
       journal::print(1, format!("Rust can talk to the journal: {}",
                                 4i).as_slice());
       journal::send(["CODE_FILE=HI", "CODE_LINE=1213", "CODE_FUNCTION=LIES"]);
       set_logger(box journal::JournalLogger);
       log!(0, "HI");
       sd_journal_log!(4, "HI {}", 2i);
    }

TODO:

   - rustdoc
   - other systemd apis
   - split out the -sys package
